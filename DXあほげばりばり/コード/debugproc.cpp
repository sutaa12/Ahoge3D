//=============================================================================
//
// デバッグ表示処理 [debugproc.cpp]
// Author : NARITADA SUZUKU
//
//=============================================================================
#include <stdio.h>
//#include <stdarg.h>"		// (※)windows.hに含まれている
#include "debugproc.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************
#define MAX_CHAR (1024)//最大文字数
//*****************************************************************************
// グローバル変数
//*****************************************************************************
LPD3DXFONT g_pD3DXFont; //フォント設定
char g_aStrDebug[MAX_CHAR];	//デバック用文字

//=============================================================================
// デバッグ表示処理の初期化
//=============================================================================
HRESULT InitDebugProc(void)
{
	LPDIRECT3DDEVICE9 pDevice = GetDevice();
		// 情報表示用フォントを設定
	D3DXCreateFont(	pDevice, 18, 0, 0, 0, FALSE, SHIFTJIS_CHARSET,
					OUT_DEFAULT_PRECIS, DEFAULT_QUALITY, DEFAULT_PITCH, "Terminal", &g_pD3DXFont);

	return S_OK;
}

//=============================================================================
// デバッグ表示処理の終了処理
//=============================================================================
void UninitDebugProc(void)
{
	if(g_pD3DXFont != NULL)
	{
		// 情報表示用フォントの開放
		g_pD3DXFont->Release();
		g_pD3DXFont = NULL;
	}
}

//=============================================================================
// デバッグ表示処理の更新処理
//=============================================================================
void UpdateDebugProc(void)
{
	memset(g_aStrDebug,'\0',strlen(g_aStrDebug));
}

//=============================================================================
// デバッグ表示処理の描画処理
//=============================================================================
void DrawDebugProc(void)
{
	RECT rect = {0, 0, SCREEN_WIDTH, SCREEN_HEIGHT};
	// テキスト描画
	g_pD3DXFont->DrawText(NULL, g_aStrDebug, -1, &rect, DT_LEFT, D3DCOLOR_ARGB(0xff, 0xff, 0xff, 0xff));
}

//=============================================================================
// デバッグ表示の登録
//=============================================================================
void PrintDebugProc(const char *fmt,...)
{
	va_list ap;//可変個の引数まとめる
	va_start(ap,fmt);//個数を格納

	
	vsprintf(&g_aStrDebug[strlen(g_aStrDebug)],fmt,ap);//格納
	va_end(ap);//終了

}

