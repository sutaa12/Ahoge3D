//=============================================================================
//
// 文字表示処理 [message.cpp]
// Author : NARITADA SUZUKU
//
//=============================================================================
#include <stdio.h>
//#include <stdarg.h>"		// (※)windows.hに含まれている
#include "message.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************
#define MAX_CHAR (1024)//最大文字数
//*****************************************************************************
// グローバル変数
//*****************************************************************************
LPD3DXFONT g_pD3DXFontMessage; //フォント設定
char g_aStrMessage[MAX_CHAR];	//デバック用文字

//=============================================================================
// メッセージ表示処理の初期化
//=============================================================================
HRESULT InitMessageProc(void)
{
	LPDIRECT3DDEVICE9 pDevice = GetDevice();
		// 情報表示用フォントを設定
	D3DXCreateFont(	pDevice, 36, 0, 0, 0, FALSE, SHIFTJIS_CHARSET,
					OUT_DEFAULT_PRECIS, DEFAULT_QUALITY, DEFAULT_PITCH, "メイリオ", &g_pD3DXFontMessage);

	return S_OK;
}

//=============================================================================
// メッセージ表示処理の終了処理
//=============================================================================
void UninitMessageProc(void)
{
	if(g_pD3DXFontMessage != NULL)
	{
		// 情報表示用フォントの開放
		g_pD3DXFontMessage->Release();
		g_pD3DXFontMessage = NULL;
	}
}

//=============================================================================
// メッセージ表示処理の更新処理
//=============================================================================
void UpdateMessageProc(void)
{
	memset(g_aStrMessage,'\0',strlen(g_aStrMessage));
}

//=============================================================================
// メッセージ表示処理の描画処理
//=============================================================================
void DrawMessageProc(void)
{
	RECT rect = {0, 0, SCREEN_WIDTH, SCREEN_HEIGHT};
	// テキスト描画
	g_pD3DXFontMessage->DrawText(NULL, g_aStrMessage, -1, &rect, DT_CENTER, D3DCOLOR_ARGB(0xff, 0xff, 0xff, 0xff));
}

//=============================================================================
// メッセージ表示の登録
//=============================================================================
void PrintMessageProc(const char *fmt,...)
{
	va_list ap;//可変個の引数まとめる
	va_start(ap,fmt);//個数を格納

	
	vsprintf(&g_aStrMessage[strlen(g_aStrMessage)],fmt,ap);//格納
	va_end(ap);//終了

}

